## 引入自定义变量及宏定义
$!init
$!define

## 设置文件保存路径
#save($controllerClassSavePath, $controllerClassName, ".java")

## 定义包路径
$tool.charSeqJoin(".", "package ", ";", false, $tableInfo.savePackageName, $controllerPackage)

$tool.charSeqJoin(".", "import ", ";", false, $tableInfo.savePackageName, $servicePackage, $serviceClassName)
$tool.charSeqJoin(".", "import ", ";", false, $tableInfo.savePackageName, $dtoPackage, $dtoClassName)
$tool.charSeqJoin(".", "import ", ";", false, $tableInfo.savePackageName, $inVoPackage, $inVoClassName)
$tool.charSeqJoin(".", "import ", ";", false, $tableInfo.savePackageName, $outVoPackage, $outVoClassName)
$tool.charSeqJoin(".", "import ", ";", false, $tableInfo.savePackageName, $assemblerPackage, $assemblerClassName)
#if($useSwagger)
    import io.swagger.annotations.Api;
    import io.swagger.annotations.ApiOperation;
    import io.swagger.annotations.ApiImplicitParam;
    import io.swagger.annotations.ApiImplicitParams;
#end
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import java.util.List;
import java.util.stream.Collectors;

## 使用宏定义实现类注释信息
#if($useSwagger)
    #classDescription("")
    @Api(tags = "$controllerClassName", description = "$tableInfo.comment")
#else
    #classDescription($tableInfo.comment)
#end
@RestController
@RequestMapping("/$tool.firstLowerCase($entityClassName)")
public class $controllerClassName {
    @Autowired
    private $serviceClassName $!{tool.firstLowerCase($serviceClassName)};
    @Autowired
    private $assemblerClassName $!{tool.firstLowerCase($assemblerClassName)};

    #if($useSwagger)@ApiOperation("新增")#end
    @PostMapping("/add")
    public Boolean add(@RequestBody $inVoClassName $!{tool.firstLowerCase($inVoClassName)}) {
        $dtoClassName $tool.firstLowerCase($dtoClassName) = $!{tool.firstLowerCase($assemblerClassName)}.assembleDTO($!{tool.firstLowerCase($inVoClassName)});
        $!{tool.firstLowerCase($serviceClassName)}.add($!{tool.firstLowerCase($dtoClassName)});
        return true;
    }

    #if($useSwagger)
        @ApiOperation("删除")
        @ApiImplicitParams({
            #foreach($column in $tableInfo.pkColumn)@ApiImplicitParam(name = "$column.name", value = "#if($!{tool.isNotBlank($column.comment)})$column.comment#else$column.name#end", paramType = "query", required = true)#if($velocityHasNext)#println(", ")#end#end#println("")
        })
    #end
    @PostMapping("/delete")
    public int deleteByPk(#foreach($column in $tableInfo.pkColumn)@RequestParam("$column.name") $tool.getClsNameByFullName($column.type) $column.name#if($velocityHasNext), #end#end) {
        return $!{tool.firstLowerCase($serviceClassName)}.deleteByPk(#foreach($column in $tableInfo.pkColumn)$column.name#if($velocityHasNext), #end#end);
    }

    #if($useSwagger)@ApiOperation("修改")#end
    @PostMapping("/update")
    public int updateByPk(@RequestBody $inVoClassName $!{tool.firstLowerCase($inVoClassName)}) {
        $dtoClassName $tool.firstLowerCase($dtoClassName) = $!{tool.firstLowerCase($assemblerClassName)}.assembleDTO($!{tool.firstLowerCase($inVoClassName)});
        return $!{tool.firstLowerCase($serviceClassName)}.updateByPk($!{tool.firstLowerCase($dtoClassName)});
    }

    #if($useSwagger)
        @ApiOperation("根据主键查询")
        @ApiImplicitParams({
            #foreach($column in $tableInfo.pkColumn)@ApiImplicitParam(name = "$column.name", value = "#if($!{tool.isNotBlank($column.comment)})$column.comment#else$column.name#end", paramType = "query", required = true)#if($velocityHasNext)#println(", ")#end#end#println("")
        })
    #end
    @GetMapping("/detail")
    public $outVoClassName queryByPk(#foreach($column in $tableInfo.pkColumn)@RequestParam("$column.name") $tool.getClsNameByFullName($column.type) $column.name#if($velocityHasNext), #end#end) {
        $dtoClassName $tool.firstLowerCase($dtoClassName) = $!{tool.firstLowerCase($serviceClassName)}.queryByPk(#foreach($column in $tableInfo.pkColumn)$column.name#if($velocityHasNext), #end#end);
        return $!{tool.firstLowerCase($assemblerClassName)}.assembleOutVO($!{tool.firstLowerCase($dtoClassName)});
    }

    #if($useSwagger)@ApiOperation("根据条件查询")#end
    @GetMapping("/list")
    public List<$!{outVoClassName}> queryAll($inVoClassName queryParams) {
        List<$!{dtoClassName}> $!{tool.firstLowerCase($dtoClassName)}s = $!{tool.firstLowerCase($serviceClassName)}.queryAll(queryParams);
        return $!{tool.firstLowerCase($dtoClassName)}s.stream().map($!{tool.firstLowerCase($assemblerClassName)}::assembleOutVO).collect(Collectors.toList());
    }
}