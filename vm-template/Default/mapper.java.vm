## 引入自定义变量及宏定义
$!init
$!define

## 设置文件保存路径
#save($mapperClassSavePath, $mapperClassName, ".java")

## 定义包路径
$tool.charSeqJoin(".", "package ", ";", false, $!{tableInfo.savePackageName}, $!{mapperPackage})

$tool.charSeqJoin(".", "import ", ";", false, $!{tableInfo.savePackageName}, $!{entityPackage}, $!{entityClassName})
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Mapper;
import java.util.List;
import java.util.Collection;

## 使用宏定义实现类注释信息
#classDescription("")
@Mapper
public interface $!{mapperClassName} {

    int insert($!{entityClassName} $!{tool.firstLowerCase($!{entityClassName})});

    int insertSelective($!{entityClassName} $!{tool.firstLowerCase($!{entityClassName})});

    int batchInsert(Collection<$!{entityClassName}> $!{tool.firstLowerCase($!{entityClassName})}s);
#if($allowMultiQueries)

    int batchInsertSelective(Collection<$!{entityClassName}> $!{tool.firstLowerCase($!{entityClassName})}s);
#end
#if(!$tableInfo.pkColumn.isEmpty())

    int deleteByPk(#foreach($column in $!{tableInfo.pkColumn})@Param("$!{column.name}") $!{tool.getClsNameByFullName($!{column.type})} $!{column.name}#if($velocityHasNext), #end#end);
#end
#if(!$tableInfo.pkColumn.isEmpty())

    int updateByPk($!{entityClassName} $!{tool.firstLowerCase($!{entityClassName})});
#end
#if(!$tableInfo.pkColumn.isEmpty())

    int updateSelectiveByPk($!{entityClassName} $!{tool.firstLowerCase($!{entityClassName})});
#end
#if(!$tableInfo.pkColumn.isEmpty() && $allowMultiQueries)

    int batchUpdateByPk(Collection<$!{entityClassName}> $!{tool.firstLowerCase($!{entityClassName})}s);
#end
#if(!$tableInfo.pkColumn.isEmpty() && $allowMultiQueries)

    int batchUpdateSelectiveByPk(Collection<$!{entityClassName}> $!{tool.firstLowerCase($!{entityClassName})}s);
#end
#if(!$tableInfo.pkColumn.isEmpty())

    $!{entityClassName} selectByPk(#foreach($column in $!{tableInfo.pkColumn})@Param("$!{column.name}") $!{tool.getClsNameByFullName($!{column.type})} $!{column.name}#if($velocityHasNext), #end#end);
#end

    List<$!{entityClassName}> selectAll(Object params);
}