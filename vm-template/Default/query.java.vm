##引入宏定义
$!init
$!define

##设置文件保存路径
#save($paramsClassSavePath, $paramsClassName, ".java")

##使用宏定义设置包后缀
#setPackageSuffix($!paramsPackage)

##使用全局变量实现默认包导入
$!autoImport
import java.io.Serializable;
import java.util.Set;

## 是否使用Lombok
#if($useLombok)
#importLombok()
#end
public class $!{paramsClassName} implements Serializable {
    private static final long serialVersionUID = $!tool.serial();
#foreach($column in $tableInfo.fullColumn)
#if(${column.comment})    /**
     * ${column.comment}
     */#end

    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};
#if($!{column.ext.genLikeProp} && ${column.type.equals("java.lang.String")})

    private $!{tool.getClsNameByFullName($column.type)} $!{column.name}Like;
#end
#if($!{column.ext.genInProp})

    private Set<$!{tool.getClsNameByFullName($column.type)}> $!{column.name}s;
#end
#end
## 是否生成get和set方法
## 使用宏定义实现get,set方法
#if($genGetMethod || $genSetMethod)
#foreach($column in $tableInfo.fullColumn)
#if($genGetMethod)#getMethod($!{tool.getClsNameByFullName($column.type)}, $!{column.name})#end
#if($genSetMethod)#setMethod($!{tool.getClsNameByFullName($column.type)}, $!{column.name})#end
#if($genGetMethod && $!{column.ext.genLikeProp} && ${column.type.equals("java.lang.String")})#getMethod($!{tool.getClsNameByFullName($column.type)}, "$!{column.name}Like")#end
#if($genSetMethod && $!{column.ext.genLikeProp} && ${column.type.equals("java.lang.String")})#setMethod($!{tool.getClsNameByFullName($column.type)}, "$!{column.name}Like")#end
#if($genGetMethod && $!{column.ext.genInProp})#getMethod("Set<$!{tool.getClsNameByFullName($column.type)}>", "$!{column.name}s")#end
#if($genSetMethod && $!{column.ext.genInProp})#setMethod("Set<$!{tool.getClsNameByFullName($column.type)}>", "$!{column.name}s")#end
#end
#end

}