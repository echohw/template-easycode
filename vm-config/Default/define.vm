##（Velocity宏定义）

## 定义直接保存路径与文件名简化的宏定义，调用方式：#save("/entity", "User", ".java")
#macro(save $path $fileName $suffix)
    $callback.setSavePath($tool.append($tableInfo.savePath, $path))
    $callback.setFileName($tool.append($fileName, $suffix))
#end

## 定义打印及打印并换行的宏定义
#macro(print $str)$!str#end
#macro(println $str)$!str
#end
#macro(lnprint $str)

$!str#end

## 定义类注释的宏定义，调用方式：#classDescription("描述信息")
#macro(classDescription $desc)
/**
#if($tool.isNotBlank($desc))
 * $desc
 *
#end
 * Created by $!author on ${time.currTime()}
 */
#end

## 定义GET方法的宏定义，调用方式：#getMethod($column)
#macro(generateGetterMethod $columnType $columnName)
    public $columnType get$!{tool.firstUpperCase($columnName)}() {
        return $columnName;
    }
#end

## 定义SET方法的宏定义，调用方式：#setMethod($column)
#macro(generateSetterMethod $columnType $columnName)
    public void set$!{tool.firstUpperCase($columnName)}($columnType $columnName) {
        this.$columnName = $columnName;
    }
#end

## 输出Table的所有列
#macro(printAllColumn $linePreSpace $lineItemLimit)
#foreach($column in $tableInfo.fullColumn)#if($velocityCount % $lineItemLimit == 1)#print($linePreSpace)#end`$column.obj.name`#if($velocityHasNext), #end#if($velocityCount % $lineItemLimit == 0 && $velocityHasNext)#println("")#end#end#println("")
#end

## 输出Table的所有列所对应的属性
#macro(printAllField $linePreSpace $lineItemLimit)
#foreach($column in $tableInfo.fullColumn)#if($velocityCount % $lineItemLimit == 1)#print($linePreSpace)#end#{${column.name},jdbcType=${column.ext.jdbcType}}#if($velocityHasNext), #end#if($velocityCount % $lineItemLimit == 0 && $velocityHasNext)#println("")#end#end#println("")
#end